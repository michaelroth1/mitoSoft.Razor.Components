@*http://blog.ppedv.de/post/Boostrap-Modal-Dialog-fur-Blazor*@

@using mitoSoft.Razor.Components.Converters
@using mitoSoft.Razor.Components.Enums

<SynchronousModal @ref="@_modal" Title="@_title" OnCloseClicked="@CloseClicked">
    <Content>
        <p>
            @_message
        </p>
    </Content>
    <Footer>
        <button type="button" class="btn btn-primary" @onclick="@YesClicked">@_dialogButtons.ToYesText()</button>
        @if (_dialogButtons == DialogButtons.OkCancle || _dialogButtons == DialogButtons.YesNo)
        {
            <button type="button" class="btn btn-primary" @onclick="@NoClicked">@_dialogButtons.ToNoText()</button>
        }
    </Footer>
</SynchronousModal>

@code {
    private string _title;
    private string _message;
    private DialogButtons _dialogButtons;
    private SynchronousModal _modal;

    [Parameter]
    public Action<MouseEventArgs, DialogResult> OnClosed { get; set; }

    public void Show(string message)
    {
        this.Show("", message);
    }

    public void Show(string title, string message)
    {
        this.Show(title, message, DialogButtons.OK);
    }

    public void Show(string title, string message, DialogButtons buttons)
    {
        _dialogButtons = buttons;
        _title = title;
        _message = message;
        _modal.Show();
    }

    public async Task<DialogResult> ShowDialog(string title, string message, DialogButtons buttons)
    {
        this.Show(title, message, buttons);

        return await _modal.ShowDialog();
    }

    private void YesClicked(MouseEventArgs e)
    {
        if (_dialogButtons == DialogButtons.OK
         || _dialogButtons == DialogButtons.OkCancle)
        {
            _modal.DialogResult = DialogResult.OK;

        }
        else if (_dialogButtons == DialogButtons.YesNo)
        {
            _modal.DialogResult = DialogResult.Yes;
        }
        else
        {
            throw new InvalidOperationException($"Invaid DialogButtons '{_dialogButtons}'.");
        }

        this.Close(e, _modal.DialogResult);
    }

    private void NoClicked(MouseEventArgs e)
    {
        if (_dialogButtons == DialogButtons.OkCancle)
        {
            _modal.DialogResult = DialogResult.Cancle;
        }
        else if (_dialogButtons == DialogButtons.YesNo)
        {
            _modal.DialogResult = DialogResult.No;
        }
        else
        {
            throw new InvalidOperationException($"Invaid DialogButtons '{_dialogButtons}'.");
        }

        this.Close(e, _modal.DialogResult);
    }

    private void CloseClicked(MouseEventArgs e)
    {
        this.OnClosed?.Invoke(e, DialogResult.None);
    }

    private void Close(MouseEventArgs e, DialogResult result)
    {
        _modal.Close(result);
        this.OnClosed?.Invoke(e, result);
    }
}